name: Project Build and Test
inputs:
  preset:
    description: 'The CMake preset to be built'
    required: true
  shell:
    description: 'The shell executable that runs the script'
    required: true
  coverage:
    description: 'Whether to run coverage analysis'
    required: false
    default: false
  gcovr_config_file:
    description: 'The gcovr configuration file'
    required: false
    default: 'gcovr.cfg'

runs:
  using: "composite"
  steps:
    - name: Configure coverage flags on Linux build
      if: ${{ inputs.coverage && runner.os == 'Linux' }}
      shell: ${{ inputs.shell }}
      run: |
        export CXXFLAGS='--coverage -O0'
        export LDFLAGS='--coverage -O0'
    - name: Run CMake
      shell: ${{ inputs.shell }}
      run: |
        cmake --preset ${{ inputs.preset }}
        cmake --build "out/build/${{ inputs.preset }}"
        cmake --build "out/build/${{ inputs.preset }}" --target install
    - name: Run Test
      shell: ${{ inputs.shell }}
      run: |
        cd "out/build/${{ inputs.preset }}"
        ctest --output-on-failure
    - name: Generate coverage report
      if: ${{ inputs.coverage && runner.os == 'Linux' }}
      shell: ${{ inputs.shell }}
      run: |
        gcovr --config "${{ inputs.gcovr_config_file }}" --exclude-unreachable-branches --exclude-throw-branches --coveralls --output "out/build/${{ inputs.preset }}/coverage.json"
    - name: Upload coverage to Coveralls
      if: ${{ inputs.coverage && runner.os == 'Linux' }}
      uses: coverallsapp/github-action@v2
      with:
        file: "out/build/${{ inputs.preset }}/coverage.json"
